basePath: /api
definitions:
  models.Product:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      role:
        description: ThÃªm role
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing users, products, orders, and carts.
  title: API Documentation
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get all products from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve a list of products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Add a new product to the database
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new product
      tags:
      - Products
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all registered users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Failed to retrieve users
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Add a new user to the database with role, hashed password, and
        validation
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to process request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - Users
swagger: "2.0"
